user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    server {
        # listen 443 ssl http2;
        server_name vm1.research.letswhirl.com;
        root /webpage;

        add_header X-Protocol $server_protocol;
        add_header TEST "TEST";

        # ssl_certificate /ssl/cert;
        # ssl_certificate_key /ssl/key;
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        # ssl_prefer_server_ciphers on;

        location / {
            try_files $uri /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        location = /ping {
            return 200 "PONG";
        }

        location = /video {
            internal;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Content-Disposition "attachment; filename=\"unc.mp4\"";
            alias /static/unc.mp4;
        }

        location = /image {
            internal;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header Content-Disposition "attachment; filename=\"unc.jpg\"";
            alias /static/unc.jpg;
        }
    
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/vm1.research.letswhirl.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/vm1.research.letswhirl.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

    server {
    if ($host = vm1.research.letswhirl.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen 80;
        server_name vm1.research.letswhirl.com;
    return 404; # managed by Certbot


}}
events {
    worker_connections  1024;
}

http {
    server {
        # Enable only HTTP/1.1
        listen 80;
        listen 444 ssl;

        root /webpage;

        ssl_certificate      /etc/letsencrypt/live/vm13.research.letswhirl.com/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/vm13.research.letswhirl.com/privkey.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        location / {
            try_files $uri /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header X-Protocol $server_protocol;
        }

        location /ping {
            return 200 'PONG';
            add_header Content-Type text/plain;
            add_header X-Protocol $server_protocol;
        }
    }

    server {
        # Enable only HTTP/2
        listen 81;
        listen 442 ssl http2;

        root /webpage;

        ssl_certificate      /etc/letsencrypt/live/vm13.research.letswhirl.com/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/vm13.research.letswhirl.com/privkey.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

        location / {
            try_files $uri /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header X-Protocol $server_protocol;
        }

        location /ping {
            return 200 'PONG';
            add_header Content-Type text/plain;
            add_header X-Protocol $server_protocol;
        }
    }

    server {
        # Enable QUIC and HTTP/3
        listen 82;
        listen 443 ssl http2;
        listen 443 quic reuseport;

        root /webpage;

        ssl_certificate      /etc/letsencrypt/live/vm13.research.letswhirl.com/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/vm13.research.letswhirl.com/privkey.pem;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

        location / {
            try_files $uri /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
            add_header X-Protocol $server_protocol;
            add_header Alt-Svc 'h3=":443"; ma=86400';
        }

        location /ping {
            return 200 'PONG';
            add_header Content-Type text/plain;
            add_header Alt-Svc 'h3=":443"; ma=86400';
            add_header X-Protocol $server_protocol;
        }
    }
}